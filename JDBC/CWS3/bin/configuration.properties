## Mechanic
SQL_INSERT=insert into TMechanics(dni, name, surname) values (?, ?, ?)
SQL_CHECK=SELECT DNI FROM TMechanics WHERE DNI = ?
SQL_DELETE_MECHANIC=delete from TMechanics where id = ?
SQL_UPDATE_MECHANIC=update TMechanics set name = ?, surname = ? where id = ?
SQL_FIND_ALL_MECHANICS=select id, dni, name, surname from TMechanics
SQL_FIND_MECHANIC_BY_ID=select * from TMechanics where id = ?

## PayOffInvoice
SQL_GET_INVOICE=SELECT ID, DATE, VAT, AMOUNT, STATUS FROM TINVOICES WHERE number = ?
SQL_GET_PAYMENTMETHOD=SELECT ID, ACCUMULATED, CLIENT_ID, DTYPE FROM TPAYMENTMEANS WHERE CLIENT_ID = ?
SQL_GET_CLIENT_ID_FROM_INVOICE_ID=SELECT CLIENT_ID FROM TCHARGES ch, TPAYMENTMEANS p WHERE ch.PAYMENTMEAN_ID = p.ID AND ch.INVOICE_ID = ?

## UnchargedRepairsClient
SQL_UNCHARGED_WORKORDERS=SELECT DISTINCT ID, DATE, STATUS, AMOUNT, DESCRIPTION FROM TWORKORDERS wo, TVEHICLES ve, TCLIENTS cl WHERE wo.STATUS <> 'INVOICED' AND wo.VEHICLE_ID = ve.ID AND ve.CLIENT_ID = ?
SQL_GET_CLIENT_ID=SELECT ID FROM TCLIENTS WHERE DNI = ?

## WorkOrderBilling
SQL_PARTS_TOTAL=select sum(s.quantity * r.price) from  TSubstitutions s, TSpareParts r where s.sparepart_id = r.id and s.intervention_id = ?
SQL_LABOR_TOTAL=select sum(i.minutes * tv.pricePerHour / 60) from TWorkOrders a, TInterventions i, TVehicles v, TVehicleTypes tv where i.workorder_id = a.id and a.vehicle_id = v.id and v.vehicletype_id = tv.id and a.id = ? and a.status = ''
SQL_UPDATE_WORKORDER_AMOUNT=update TWorkOrders set amount = ? where id = ?
SQL_LAST_INVOICE_NUMBER=select max(number) from TInvoices
SQL_INSERT_INVOICE=insert into TInvoices(number,date,vat,amount,status) values(?, ?, ?, ?, ?)
SQL_WORKORDER_INVOICE_ASSOC=update TWorkOrders set invoice_id = ? where id = ?
SQL_UPDATE_WORKORDER_STATUS=update TWorkOrders set status = ? where id = ?
SQL_CHECK_WORKORDER_STATUS=select status from TWorkOrders where id = ?
SQL_RETRIEVE_GENERATED_KEY=select id from TInvoices where number = ?

## Course
SQL_REGISTER_COURSE=insert into TCourses(name,description,startdate,enddate,hours) values (?,?,?,?,?)
SQL_GET_KEY_COURSE=select max(id) from TCourses
SQL_UPDATE_COURSE=update TCourses set name = ?, description = ?, startDate = ?, endDate = ? where id = ?
SQL_CHECK_EXISTING_COURSE=select * from TCourses where id = ?
SQL_FIND_ALL_COURSES=select * from TCourses
SQL_DELETE_COURSE=delete from TCourses where id = ?
SQL_LIST_COURSENAME_AND_ASSISTANTS=select name, count(course_id) as Number_Assistants from TCourses c, TEnrollments e where e.course_id = c.id group by c.name order by c.name

## VehicleType
SQL_FIND_ALL_VEHICLETYPES=select * from TVehicletypes
SQL_FIND_VEHICLETYPE_BY_ID=select * from TVehicleTypes where id = ?
## Certificate
SQL_CHECK_CERTIFICATE=select SUM(((((c.hours*percentage)/100)*attendance)/100)) as hoursattendedtotype from tenrollments en, tcourses c, tdedications d, tvehicletypes ve where d.vehicletype_id = ve.id and en.course_id = c.id and c.id = d.course_id and en.passed = true and d.vehicletype_id = ? and mechanic_id = ? group by mintraininghours
SQL_GET_VEHICLETYPE_DEDICATED=select distinct vehicletype_id, mintraininghours from tdedications d, tvehicletypes v where d.vehicletype_id = v.id
SQL_GET_MECHANIC_ENROLLED=select distinct mechanic_id from tenrollments
SQL_INSERT_CERTIFICATE=insert into tcertificates(mechanic_id, vehicletype_id, date) values(?,?,?)
SQL_GET_CERTIFICATE=select * from tcertificates where mechanic_id = ? and vehicletype_id = ?

## List certificates by vehicleType
SQL_FIND_CERTIFICATE_BY_VEHICLETYPE=select * from tcertificates